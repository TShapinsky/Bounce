(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     80085,       1824]
NotebookOptionsPosition[     78697,       1794]
NotebookOutlinePosition[     79066,       1810]
CellTagsIndexPosition[     79023,       1807]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Model", " ", "Parameters"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]b", "=", 
    RowBox[{"60", " ", "2", 
     RowBox[{"Pi", "/", "360"}]}]}], ";"}], "  ", 
  RowBox[{"(*", 
   RowBox[{
   "angle", " ", "between", " ", "paired", " ", "legs", " ", "on", " ", "the",
     " ", "bottom"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rb", "=", 
    RowBox[{"4", "-", 
     RowBox[{"5", "/", "16"}]}]}], ";"}], "                            ", 
  RowBox[{"(*", 
   RowBox[{"radius", " ", "of", " ", "bottom"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]t", "=", 
    RowBox[{"20.45", " ", "2", 
     RowBox[{"Pi", "/", "360"}]}]}], ";"}], "   ", 
  RowBox[{"(*", 
   RowBox[{"leg", " ", "angle", " ", "on", " ", "top"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"rt", "=", "3.46"}], ";"}], "                      ", 
   RowBox[{"(*", 
    RowBox[{"radius", " ", "of", " ", "top"}], "*)"}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", " ", "=", " ", 
    RowBox[{"12", "+", 
     RowBox[{"5", "/", "8"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"length", " ", "of", " ", "legs"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r", " ", "=", " ", "1"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"radius", " ", "of", " ", "servo", " ", "horn"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"test", " ", "parameters"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]Range", " ", "=", " ", 
    RowBox[{"15", " ", "Degree"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "desired", " ", "maximum", " ", "tilt", " ", "angle", " ", "in", " ", 
    "worst", " ", "case", " ", "direction", " ", "for", " ", "any", " ", 
    "position"}], "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lRange", " ", "=", " ", "6"}], ";", "                  ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"linear", " ", "range", " ", "to", " ", 
       RowBox[{"test", ".", " ", "x"}]}], "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "lRange"}], " ", "to"}], " ", "+", "lRange"}]}], ",", 
     " ", 
     RowBox[{"y", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "lRange"}], " ", "to"}], " ", "+", "lRange"}]}]}], 
    "*)"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{"buildModel", "[", 
    RowBox[{"r_", ",", "\[Theta]_"}], "]"}], " ", ":=", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Phi]", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "\[Pi]"}], "-", 
             RowBox[{"3", "\[Theta]"}]}], ")"}], "/", "3"}]}], "}"}], ",", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"r", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{"i", 
                  RowBox[{"(", 
                   RowBox[{"\[Phi]", "+", "\[Theta]"}], ")"}]}], "-", 
                 RowBox[{"\[Theta]", "/", "2"}]}], "]"}]}], ",", 
              RowBox[{"r", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{"i", 
                  RowBox[{"(", 
                   RowBox[{"\[Phi]", "+", "\[Theta]"}], ")"}]}], "-", 
                 RowBox[{"\[Theta]", "/", "2"}]}], "]"}]}], ",", "0", ",", 
              "1"}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"r", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{"i", 
                  RowBox[{"(", 
                   RowBox[{"\[Phi]", "+", "\[Theta]"}], ")"}]}], "+", 
                 RowBox[{"\[Theta]", "/", "2"}]}], "]"}]}], ",", 
              RowBox[{"r", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{"i", 
                  RowBox[{"(", 
                   RowBox[{"\[Phi]", "+", "\[Theta]"}], ")"}]}], "+", 
                 RowBox[{"\[Theta]", "/", "2"}]}], "]"}]}], ",", "0", ",", 
              "1"}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", "  ", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "2"}], "}"}]}], "]"}]}], "]"}], ",", 
      "1"}], "]"}], "//", "Transpose"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"tMat", "[", 
     RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0", ",", "x"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0", ",", "y"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1", ",", "z"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"riffle", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"Fold", "[", 
   RowBox[{"Join", ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"y", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"2", "i"}], "-", "1"}], "]"}], "]"}], ",", 
        RowBox[{"x", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"2", "i"}], "-", "1"}], "]"}], "]"}], ",", 
        RowBox[{"x", "[", 
         RowBox[{"[", 
          RowBox[{"2", "i"}], "]"}], "]"}], ",", 
        RowBox[{"y", "[", 
         RowBox[{"[", 
          RowBox[{"2", "i"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{
         RowBox[{"Length", "[", "x", "]"}], "/", "2"}]}], "}"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"modelC", "[", 
     RowBox[{"b_", ",", "t_"}], "]"}], ":=", 
    RowBox[{"riffle", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"b", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}], ",", 
      RowBox[{"Transpose", "[", 
       RowBox[{"t", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"modelB", "[", "b_", "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"Line", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"b", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}], "~", "Join", "~", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"b", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", 
            RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "}"}]}], "]"}], "}"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"modelE", "[", 
     RowBox[{"b_", ",", "e_"}], "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"b", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"1", ";;", "3"}], ",", "i"}], "]"}], "]"}], ",", 
         RowBox[{"e", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"1", ";;", "3"}], ",", "i"}], "]"}], "]"}]}], "}"}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"e", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"model", "[", 
     RowBox[{"b_", ",", "t_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Line", "[", 
       RowBox[{"modelB", "[", "b", "]"}], "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"modelB", "[", "t", "]"}], "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"modelC", "[", 
        RowBox[{"b", ",", "t"}], "]"}], "]"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"norm", "[", "x_", "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"x", ".", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"unit", "[", "x_", "]"}], ":=", 
   RowBox[{"x", "/", 
    RowBox[{"norm", "[", "x", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"normMat", "[", 
    RowBox[{"u_", ",", "\[Theta]_"}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"l", "=", 
       RowBox[{
        RowBox[{"j", "*", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"i", "*", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "}"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"unit", "[", 
          RowBox[{"l", "~", "Cross", "~", "u"}], "]"}], " ", "~", "Join", "~", 
         RowBox[{"{", "0", "}"}]}], ",", 
        RowBox[{
         RowBox[{"unit", "[", 
          RowBox[{"u", "~", "Cross", "~", 
           RowBox[{"unit", "[", 
            RowBox[{"l", "~", "Cross", "~", "u"}], "]"}]}], "]"}], "~", 
         "Join", "~", 
         RowBox[{"{", "0", "}"}]}], ",", 
        RowBox[{
         RowBox[{"unit", "[", "u", "]"}], "~", "Join", "~", 
         RowBox[{"{", "0", "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}]}],
     "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rotMat", "[", 
    RowBox[{"roll_", ",", "pitch_", ",", "yaw_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "~", "Join", "~", 
        RowBox[{"{", "0", "}"}]}], "&"}], "/@", 
      RowBox[{"RollPitchYawMatrix", "[", 
       RowBox[{"{", 
        RowBox[{"yaw", ",", "roll", ",", "pitch"}], "}"}], "]"}]}], ")"}], 
    "~", "Join", "~", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], "}"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"topPts", " ", "=", " ", 
   RowBox[{"buildModel", "[", 
    RowBox[{"rt", ",", "\[Theta]t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"botPts", " ", "=", " ", 
   RowBox[{"buildModel", "[", 
    RowBox[{"rb", ",", " ", "\[Theta]b"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"top", "[", 
   RowBox[{
   "x_", ",", "y_", ",", "z_", ",", "roll_", ",", "pitch_", ",", "yaw_"}], 
   "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"tMat", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ".", 
   RowBox[{"rotMat", "[", 
    RowBox[{"roll", ",", "pitch", ",", "yaw"}], "]"}], ".", 
   "topPts"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"top2", "[", 
    RowBox[{
    "x_", ",", "y_", ",", "z_", ",", "ux_", ",", "uy_", ",", "uz_", ",", 
     "\[Theta]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"tMat", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ".", 
    RowBox[{"normMat", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ux", ",", "uy", ",", "uz"}], "}"}], ",", "\[Theta]"}], "]"}], 
    ".", "topPts"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ej", "[", "in_", "]"}], ":=", 
  RowBox[{"unit", "[", 
   RowBox[{"botPts", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"1", ";;", "3"}], ",", "in"}], "]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ei", "[", "in_", "]"}], " ", ":=", 
   RowBox[{
    RowBox[{"ej", "[", "in", "]"}], "~", "Cross", "~", "k"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ek", "[", "in_", "]"}], ":=", "k"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ePos", "[", 
   RowBox[{"in_", ",", "\[Theta]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"botPts", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"1", ";;", "3"}], ",", "in"}], "]"}], "]"}], "+", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"in", "+", "1"}], ")"}]}], "*", 
    RowBox[{"ei", "[", "in", "]"}], 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
   RowBox[{"k", " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ePos", "[", "\[Theta]s_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"ePos", "[", 
     RowBox[{"#", ",", 
      RowBox[{"\[Theta]s", "[", 
       RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "&"}], "/@", 
   RowBox[{"Table", "[", 
    RowBox[{"in", ",", 
     RowBox[{"{", 
      RowBox[{"in", ",", "1", ",", "6"}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ePos", "[", 
    RowBox[{"a_", ",", "b_", ",", "c_", ",", "d_", ",", "e_", ",", "f_"}], 
    "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "~", "Join", "~", 
       RowBox[{"{", "1", "}"}]}], "&"}], "/@", 
     RowBox[{"ePos", "[", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f"}], "}"}],
       "]"}]}], "//", "Transpose"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dists", "[", 
    RowBox[{
    "x0_", ",", "x1_", ",", "x2_", ",", "x3_", ",", "x4_", ",", "x5_", ",", 
     "x_", ",", "y_", ",", "z_", ",", "\[Alpha]_", ",", "\[Beta]_", ",", 
     "\[Gamma]_"}], "]"}], ":=", 
   RowBox[{"norm", "/@", 
    RowBox[{"Transpose", "[", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ePos", "[", 
        RowBox[{"x0", ",", "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5"}],
         "]"}], "-", 
       RowBox[{"top", "[", 
        RowBox[{
        "x", ",", "y", ",", "z", ",", "\[Alpha]", ",", "\[Beta]", ",", 
         "\[Gamma]"}], "]"}]}], ")"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dists2", "[", 
     RowBox[{
     "x0_", ",", "x1_", ",", "x2_", ",", "x3_", ",", "x4_", ",", "x5_", ",", 
      "x_", ",", "y_", ",", "z_", ",", "ux_", ",", "uy_", ",", "uz_", ",", 
      "\[Theta]_"}], "]"}], ":=", 
    RowBox[{"norm", "/@", 
     RowBox[{"Transpose", "[", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ePos", "[", 
         RowBox[{
         "x0", ",", "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5"}], "]"}],
         "-", 
        RowBox[{"top2", "[", 
         RowBox[{
         "x", ",", "y", ",", "z", ",", "ux", ",", "uy", ",", "uz", ",", 
          "\[Theta]"}], "]"}]}], ")"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqs", "[", 
   RowBox[{
   "x0_", ",", "x1_", ",", "x2_", ",", "x3_", ",", "x4_", ",", "x5_", ",", 
    "x_", ",", "y_", ",", "z_", ",", "\[Alpha]_", ",", "\[Beta]_", ",", 
    "\[Gamma]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "\[Equal]", "d"}], "&"}], "/@", 
   RowBox[{"dists", "[", 
    RowBox[{
    "x0", ",", "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5", ",", "x", 
     ",", "y", ",", "z", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eqs2", "[", 
    RowBox[{
    "x0_", ",", "x1_", ",", "x2_", ",", "x3_", ",", "x4_", ",", "x5_", ",", 
     "x_", ",", "y_", ",", "z_", ",", "ux_", ",", "uy_", ",", "uz_", ",", 
     "\[Theta]_"}], "]"}], " ", ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "\[Equal]", "d"}], "&"}], "/@", 
    RowBox[{"dists2", "[", 
     RowBox[{
     "x0", ",", "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5", ",", "x", 
      ",", "y", ",", "z", ",", "ux", ",", "uy", ",", "uz", ",", "\[Theta]"}], 
     "]"}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"calc", "[", 
   RowBox[{
   "x_", ",", "y_", ",", "\[Alpha]_", ",", "\[Beta]_", ",", "h_", ",", 
    "\[Gamma]_"}], "]"}], " ", ":=", 
  RowBox[{"FindRoot", "[", 
   RowBox[{
    RowBox[{"eqs", "[", 
     RowBox[{
     "x0", ",", "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5", ",", "x", 
      ",", "y", ",", "h", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]"}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x0", ",", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", 
      RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x1", ",", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", 
      RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x2", ",", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", 
      RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x3", ",", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", 
      RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x4", ",", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", 
      RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x5", ",", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", 
      RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{"calc2", "[", 
    RowBox[{
    "x_", ",", "y_", ",", "z_", ",", "ux_", ",", "uy_", ",", "uz_", ",", 
     "\[Theta]_"}], "]"}], ":=", 
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{"eqs2", "[", 
      RowBox[{
      "x0", ",", "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5", ",", "x", 
       ",", "y", ",", "z", ",", "ux", ",", "uy", ",", "uz", ",", "\[Theta]"}],
       "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x0", ",", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x1", ",", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x2", ",", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x3", ",", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x4", ",", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x5", ",", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]",
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"calc", "[", 
     RowBox[{
     "x_", ",", "y_", ",", "\[Alpha]_", ",", "\[Beta]_", ",", "h_", ",", 
      "\[Gamma]_"}], "]"}], ":=", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eqs", "[", 
        RowBox[{
        "x0", ",", "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5", ",", "x",
          ",", "y", ",", "h", ",", "\[Alpha]", ",", "\[Beta]", ",", 
         "\[Gamma]"}], "]"}], "~", "Join", "~", "ineqs"}], ",", 
      RowBox[{"{", 
       RowBox[{"x0", ",", "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5"}], 
       "}"}], ",", "Reals"}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h", "=", "12.43"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"calc2", "[", 
   RowBox[{"1", ",", "1", ",", "h", ",", "0", ",", "0", ",", "1", ",", "0"}], 
   "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]",
   "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7187040252505984`*^9, 3.718704085643246*^9}, {
   3.718704142096012*^9, 3.7187044963606853`*^9}, {3.718704541047532*^9, 
   3.7187045734685917`*^9}, {3.718708549704302*^9, 3.7187086179283285`*^9}, {
   3.7187087322102156`*^9, 3.718708732510723*^9}, {3.7187117094099693`*^9, 
   3.718711738394005*^9}, {3.7187117880812063`*^9, 3.718711818143695*^9}, {
   3.718711854034119*^9, 3.7187118626122026`*^9}, {3.718711925908702*^9, 
   3.7187121113605943`*^9}, {3.718712168157776*^9, 3.7187123998133593`*^9}, {
   3.718712441628552*^9, 3.718712535411104*^9}, {3.7187125982392282`*^9, 
   3.7187126240672455`*^9}, {3.7187126600672092`*^9, 
   3.7187126625360527`*^9}, {3.718712731223484*^9, 3.718712927161047*^9}, {
   3.7187129744112463`*^9, 3.71871331085643*^9}, {3.7187133461689053`*^9, 
   3.7187133575440755`*^9}, {3.718713394997089*^9, 3.7187135214189863`*^9}, {
   3.7187135528253946`*^9, 3.7187135874814796`*^9}, {3.718713626356674*^9, 
   3.71871364152837*^9}, {3.718717811376917*^9, 3.718717886908681*^9}, {
   3.718717921158937*^9, 3.7187179236587515`*^9}, {3.718717993659423*^9, 
   3.718718016237523*^9}, {3.71871807231161*^9, 3.7187181212167263`*^9}, {
   3.7187181534104443`*^9, 3.7187182416028447`*^9}, {3.7187182842789946`*^9, 
   3.718718350160509*^9}, {3.718718461199193*^9, 3.718718476699001*^9}, {
   3.718721189552617*^9, 3.7187212059277515`*^9}, {3.718721299819216*^9, 
   3.7187213055378456`*^9}, {3.7187213929292107`*^9, 
   3.7187215938367796`*^9}, {3.7187216669482183`*^9, 3.718721700589072*^9}, {
   3.7187217326361322`*^9, 3.7187218102766557`*^9}, {3.718721859182878*^9, 
   3.7187220120735555`*^9}, {3.718722066245494*^9, 3.7187221355423436`*^9}, {
   3.718722221167373*^9, 3.7187222241831727`*^9}, {3.718722261058018*^9, 
   3.7187223899332204`*^9}, {3.7187224206363745`*^9, 
   3.7187225115273566`*^9}, {3.7187225937778883`*^9, 3.718722624731229*^9}, {
   3.7187226582315063`*^9, 3.7187226585127263`*^9}, {3.7187226886847973`*^9, 
   3.7187228077165985`*^9}, {3.7187228392633195`*^9, 3.718722908809512*^9}, {
   3.7187230304684677`*^9, 3.718723054452202*^9}, {3.718723127200384*^9, 
   3.7187231454657154`*^9}, {3.7187232628308296`*^9, 
   3.7187232689870973`*^9}, {3.7187233417053814`*^9, 
   3.7187234951333976`*^9}, {3.718723588570507*^9, 3.7187237329445324`*^9}, {
   3.718723765350565*^9, 3.718723836912635*^9}, {3.718723898833931*^9, 
   3.718724347703314*^9}, {3.718724420796647*^9, 3.7187245148742285`*^9}, {
   3.7187245477021523`*^9, 3.718724628092283*^9}, {3.7187246741232357`*^9, 
   3.7187247192168894`*^9}, {3.7187247540448256`*^9, 
   3.7187247704977283`*^9}, {3.718724825825478*^9, 3.718724943731306*^9}, 
   3.7187249849661503`*^9, {3.718725095060477*^9, 3.7187251901238317`*^9}, {
   3.7187252356395464`*^9, 3.718725283264515*^9}, {3.7187253198115883`*^9, 
   3.718725403233489*^9}, {3.7187254550460052`*^9, 3.7187256051234856`*^9}, {
   3.718725643560816*^9, 3.7187257084353905`*^9}, {3.7187258054665403`*^9, 
   3.718725961028242*^9}, {3.7187260020582128`*^9, 3.7187260054955664`*^9}, {
   3.718726035776039*^9, 3.7187260585565724`*^9}, {3.7187260941959143`*^9, 
   3.718726096617734*^9}, {3.7187264404960628`*^9, 3.7187264440411897`*^9}, {
   3.7187265373498793`*^9, 3.7187265538028145`*^9}, {3.7187265938960886`*^9, 
   3.7187266222708826`*^9}, {3.7187266945199986`*^9, 
   3.7187267393773212`*^9}, {3.7187267755965424`*^9, 3.718726827608218*^9}, {
   3.7187268593800106`*^9, 3.7187268724880795`*^9}, {3.718726905008896*^9, 
   3.718726907630571*^9}, {3.718726973764575*^9, 3.7187270019783845`*^9}, {
   3.7187271481653194`*^9, 3.71872716593089*^9}, {3.718727197149074*^9, 
   3.7187272374767237`*^9}, {3.718727386397558*^9, 3.7187274780826635`*^9}, {
   3.7187275752409773`*^9, 3.7187276622801523`*^9}, 3.718727697476251*^9, {
   3.7187277358321695`*^9, 3.718727759799535*^9}, {3.7187277999865313`*^9, 
   3.718727853470413*^9}, 3.7187278866730075`*^9, {3.718728009030864*^9, 
   3.718728035999285*^9}, {3.718728076998723*^9, 3.718728136935491*^9}, {
   3.718730275343136*^9, 3.71873028403065*^9}, {3.71873035126506*^9, 
   3.7187305132248173`*^9}, {3.718730544741069*^9, 3.718730695816162*^9}, {
   3.7187307310328565`*^9, 3.7187307432944574`*^9}, {3.7187307738073688`*^9, 
   3.7187308121453705`*^9}, 3.718730907113516*^9, {3.7187309586446376`*^9, 
   3.718731047706459*^9}, {3.718731107471904*^9, 3.7187311291122103`*^9}, 
   3.718731182877551*^9, 3.71873129480416*^9, {3.7187314591146393`*^9, 
   3.7187314794596353`*^9}, {3.7187315523982687`*^9, 3.718731652101453*^9}, {
   3.718731827457553*^9, 3.718731832957425*^9}, 3.718731873129286*^9, {
   3.7187319409139395`*^9, 3.7187320395389876`*^9}, {3.7187320941172733`*^9, 
   3.7187321297888756`*^9}, {3.7187321700073633`*^9, 
   3.7187321702104883`*^9}, {3.718732206366705*^9, 3.718732221022686*^9}, 
   3.718732703085355*^9, {3.718733833305497*^9, 3.718733833977394*^9}, {
   3.718733899383097*^9, 3.7187339852107115`*^9}, 3.7187340608354454`*^9, {
   3.7187341246163282`*^9, 3.718734166501012*^9}, {3.7187353249739428`*^9, 
   3.718735335208932*^9}, {3.718735596471728*^9, 3.7187355987061887`*^9}, {
   3.718735863202767*^9, 3.7187358970146203`*^9}, 3.718735954388928*^9, {
   3.7187369421467*^9, 3.7187369494726567`*^9}, {3.7187371425439625`*^9, 
   3.718737142981442*^9}, {3.718737416118462*^9, 3.718737442929947*^9}, {
   3.7187375188302603`*^9, 3.718737521189551*^9}, {3.7189034309824066`*^9, 
   3.7189034388325496`*^9}, {3.718903530736796*^9, 3.7189035332808633`*^9}, {
   3.7189036367944164`*^9, 3.7189036905964947`*^9}, {3.7189037266545353`*^9, 
   3.7189038433334303`*^9}, {3.718903882398488*^9, 3.7189038860898433`*^9}, {
   3.7189039649819107`*^9, 3.718903985981079*^9}, {3.718995638380018*^9, 
   3.7189956516143847`*^9}, 3.7189957796941457`*^9, {3.718995988635105*^9, 
   3.7189959887365913`*^9}, {3.7189961738387613`*^9, 
   3.7189961827839813`*^9}, {3.718996268080888*^9, 3.718996271705907*^9}, {
   3.7189971282550554`*^9, 3.7189971499895997`*^9}, {3.7189975969927454`*^9, 
   3.7189976557631187`*^9}, {3.7189976988135843`*^9, 3.718997700829423*^9}, {
   3.7189977738980265`*^9, 3.7189977891649246`*^9}, {3.7189984674709167`*^9, 
   3.7189985783930674`*^9}, {3.7189986230009794`*^9, 3.718998708451454*^9}, {
   3.7189987499814215`*^9, 3.7189987539188037`*^9}, {3.7189988258541765`*^9, 
   3.7189988279477377`*^9}, {3.718998973712096*^9, 3.718998982649592*^9}, {
   3.7189991401939745`*^9, 3.718999163237747*^9}, {3.718999318052987*^9, 
   3.7189993194120255`*^9}, {3.7189998870334034`*^9, 3.718999906565539*^9}, {
   3.7190001821454053`*^9, 3.7190001822124047`*^9}, {3.719053150154147*^9, 
   3.7190531757010517`*^9}, {3.719053264935272*^9, 3.719053508794112*^9}, {
   3.7190536002623525`*^9, 3.719053889650239*^9}, {3.7190540022182093`*^9, 
   3.719054007140027*^9}, {3.71905430943335*^9, 3.719054337558203*^9}, {
   3.719054388464302*^9, 3.719054390276609*^9}, {3.7190549128075666`*^9, 
   3.7190549131982203`*^9}, {3.7190552441858163`*^9, 
   3.7190552770987372`*^9}, {3.7190560427649136`*^9, 
   3.7190560462167635`*^9}, {3.7190563560738835`*^9, 3.719056378370945*^9}, {
   3.7190564184959545`*^9, 3.719056501948619*^9}, {3.7190566922131453`*^9, 
   3.7190566923850093`*^9}, {3.719056800789826*^9, 3.7190568615395136`*^9}, {
   3.7190569120546675`*^9, 3.719056912601712*^9}, {3.719058505964386*^9, 
   3.7190585204021797`*^9}, {3.719060495031185*^9, 3.719060498999769*^9}, {
   3.719060557310763*^9, 3.719060557701561*^9}, {3.7190605895599327`*^9, 
   3.719060630824106*^9}, {3.71906072474302*^9, 3.7190607478829374`*^9}, {
   3.7190609569930253`*^9, 3.7190609659489555`*^9}, {3.71906144173975*^9, 
   3.7190614708644047`*^9}, {3.7190755427527556`*^9, 3.719075570065179*^9}, {
   3.719075645267812*^9, 3.719075677470796*^9}, {3.719075774133314*^9, 
   3.71907580861666*^9}, {3.7190760943418303`*^9, 3.7190760970763054`*^9}, {
   3.7190761451227913`*^9, 3.7190762643893595`*^9}, {3.71907644258747*^9, 
   3.7190764587907763`*^9}, {3.7191120541078043`*^9, 
   3.7191121714969873`*^9}, {3.71911226519895*^9, 3.7191122655739326`*^9}, {
   3.71911231576099*^9, 3.7191123171984634`*^9}, {3.7191128510662084`*^9, 
   3.7191128535037127`*^9}, {3.7208755459082813`*^9, 
   3.72087557729543*^9}},ExpressionUUID->"98211a91-54ad-4dcc-8345-\
41f2debd8887"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x0", "\[Rule]", "0.3021053927870071`"}], ",", 
   RowBox[{"x1", "\[Rule]", 
    RowBox[{"-", "0.030442161096397993`"}]}], ",", 
   RowBox[{"x2", "\[Rule]", 
    RowBox[{"-", "0.1288792436754901`"}]}], ",", 
   RowBox[{"x3", "\[Rule]", "0.3271687193248672`"}], ",", 
   RowBox[{"x4", "\[Rule]", "0.0643535701099449`"}], ",", 
   RowBox[{"x5", "\[Rule]", 
    RowBox[{"-", "0.05903164384552548`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.720875558093154*^9, 
  3.720875578662571*^9}},ExpressionUUID->"585520ac-53e3-414d-bdf1-\
e832b2a09100"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"dfuns", "//", "CForm"}]], "Input",
 CellChangeTimes->{{3.7191122240276203`*^9, 
  3.7191123077454586`*^9}},ExpressionUUID->"30a83f5b-700c-4318-887f-\
179850663cfe"],

Cell[BoxData[
 RowBox[{"DeviceClose", "[", "serial", "]"}]], "Input",
 CellChangeTimes->{{3.718734212962529*^9, 
  3.718734218774084*^9}},ExpressionUUID->"c5b7b214-f086-4890-bea9-\
216bb33a9bf7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DeviceReadBuffer", "[", "serial", "]"}], "//", 
  "FromCharacterCode"}]], "Input",
 CellChangeTimes->{{3.7191156237238073`*^9, 3.719115628661297*^9}, {
  3.7191156883479223`*^9, 
  3.7191156885985374`*^9}},ExpressionUUID->"d3106915-5c42-45de-9019-\
e6961a9289e4"],

Cell[BoxData["\<\" to converge at start\\r\\nFailed to converge at \
start\\r\\n{-0.432492,0,0,0,0\\r\\n-0.43\\r\\n0.00\\r\\n0.00\\r\\n0.00\\r\\n0.\
00\\r\\n0.00\\r\\n\\r\\n\\r\\n\"\>"], "Output",
 CellChangeTimes->{
  3.719117476636925*^9},ExpressionUUID->"7110e4b2-22b9-40da-a472-\
727f08fc7a81"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ControllerInformation", "[", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MaxTilt", "=", 
     RowBox[{"Pi", "/", "8"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MaxTwist", "=", 
     RowBox[{"Pi", "/", "8"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MaxDisp", " ", "=", " ", ".1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"speed", " ", "=", ".01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clamp", "[", 
     RowBox[{"a_", ",", "min_", ",", "max_"}], "]"}], ":=", 
    RowBox[{"Max", "[", 
     RowBox[{
      RowBox[{"Min", "[", 
       RowBox[{"a", ",", "max"}], "]"}], ",", "min"}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"serial", "=", 
    RowBox[{"DeviceOpen", "[", 
     RowBox[{"\"\<Serial\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<COM12\>\"", ",", 
        RowBox[{"\"\<BaudRate\>\"", "\[Rule]", "9600"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"serial", "=", 
     RowBox[{"DeviceOpen", "[", "\"\<WriteDemo\>\"", "]"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ControllerManipulate", "[", 
    RowBox[{
     RowBox[{"DeviceWriteBuffer", "[", 
      RowBox[{"serial", ",", 
       RowBox[{"ToString", "[", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
        "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"ControllerPath", "\[Rule]", " ", "\"\<Joystick\>\""}], ",", " ", 
     RowBox[{"ControllerLinking", "\[Rule]", "All"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdyF1IU3EAQPFrGUQZzFmUKWMTalSuKCbURqgtWSCIhbXLglL7kqBaCtVT
FEiJbY7ESSskc2kyJBT0QbQPNC656jqkhQ4hR5FLI4gMFVZ2z//h8INjqr5y
7NwqSZLMWrh029IUGpgvdtxUmjFjUQnigRsHH2JA2hDGSqlS+MGR3o/PF0aF
s96vw+hJrbzF1f6oivuv1k/i9LzhM26v+ZvApUTVdzSeKviJfvfZBYzLxj+4
Nja3jH3Hs1J4b6JYeqrZXXR5Hdp7r23B39mBrejdIW9DeajEhkcKsgtxJVzn
xHjnaCn2Zr0/iZFGVzUqvrZLeLphfS1G71TUYTKYcx097161463pvC6s/bGm
By1PGjZ1alrbA8LWjmgORsJTFsy98KgQ678li3Dyi8+Jd1vKj+I/n+zGRsP4
GXS1uDy4d+N9odnaNo75VjmKySb7Ipb5U8s4p87qujRVNaHH5hHVjcZPSpUw
f+i8+G821+BUqb4V+8dsD/BEifIYD4/0hXAsI30A04KRQXSGJl6Iv8v7Gg2Z
zo+Y0OliuC/TEseA3iH8lbfb/EwzZrLvxBlz2h682G0Svhw+ZMPcmVgZ/gco
oWLP
  "],ExpressionUUID->"368d37fd-90bf-4609-b281-339a1598fd3e"],

Cell[BoxData[
 InterpretationBox[
  PanelBox[
   StyleBox[GridBox[{
      {
       DynamicModuleBox[{System`InfoDump`open$$ = False}, 
        PaneSelectorBox[{False->
         RowBox[{
          OpenerBox[Dynamic[System`InfoDump`open$$]], "   ", 
          StyleBox[
           TemplateBox[{StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "SystemInformationDialog", "ControllerDeviceText"], 
                StandardForm]], DynamicUpdating -> True, StripOnInput -> 
              False],"\" \"","\"1\"","\": \"","\"Airplane Mode Switch\""},
            "RowDefault"],
           StripOnInput->False,
           FontWeight->Bold]}], True->GridBox[{
           {
            RowBox[{
             OpenerBox[Dynamic[System`InfoDump`open$$]], "   ", 
             StyleBox[
              TemplateBox[{StyleBox[
                 DynamicBox[
                  ToBoxes[
                   FEPrivate`FrontEndResource[
                   "SystemInformationDialog", "ControllerDeviceText"], 
                   StandardForm]], DynamicUpdating -> True, StripOnInput -> 
                 False],"\" \"","\"1\"","\": \"","\"Airplane Mode Switch\""},
               "RowDefault"],
              StripOnInput->False,
              FontWeight->Bold]}]},
           {GridBox[{
              {"\<\"Raw Product Name\"\>", "\<\"\\\"Airplane Mode \
Switch\\\"\"\>"},
              {"\<\"Raw Product ID\"\>", "43982"},
              {"\<\"Device Type\"\>", "\<\"Windows DirectInput Device\"\>"},
              {"\<\"Raw Controller Type\"\>", "\<\"External Controller\"\>"},
              {"\<\"Wolfram Language Controls\"\>", 
               DynamicModuleBox[{System`InfoDump`open$$ = False}, 
                PaneSelectorBox[{False->
                 RowBox[{
                  OpenerBox[Dynamic[System`InfoDump`open$$]], "   ", 
                  StyleBox[
                   RowBox[{"0", "\[InvisibleSpace]", 
                    StyleBox[
                    DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "SystemInformationDialog", "ControlsSmallText"], 
                    StandardForm]],
                    StripOnInput->False,
                    DynamicUpdating->True]}], "IT",
                   StripOnInput->False]}], True->GridBox[{
                   {
                    RowBox[{
                    OpenerBox[Dynamic[System`InfoDump`open$$]], "   ", 
                    StyleBox[
                    RowBox[{"0", "\[InvisibleSpace]", 
                    StyleBox[
                    DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "SystemInformationDialog", "ControlsSmallText"], 
                    StandardForm]],
                    StripOnInput->False,
                    DynamicUpdating->True]}], "IT",
                    StripOnInput->False]}]},
                   {"\<\"\[Null]\"\>"}
                  },
                  BaselinePosition->{Baseline, {1, 1}},
                  DefaultBaseStyle->"Column",
                  GridBoxAlignment->{"Columns" -> {{Left}}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{1.}}, "RowsIndexed" -> {}}]}, Dynamic[
                 System`InfoDump`open$$],
                 BaselinePosition->Baseline,
                 FrameMargins->0,
                 ImageSize->Automatic],
                DynamicModuleValues:>{}]},
              {"\<\"Raw Controls\"\>", 
               DynamicModuleBox[{System`InfoDump`open$$ = False}, 
                PaneSelectorBox[{False->
                 RowBox[{
                  OpenerBox[Dynamic[System`InfoDump`open$$]], "   ", 
                  StyleBox[
                   RowBox[{"1", "\[InvisibleSpace]", 
                    StyleBox[
                    DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "SystemInformationDialog", "ControlsSmallText"], 
                    StandardForm]],
                    StripOnInput->False,
                    DynamicUpdating->True]}], "IT",
                   StripOnInput->False]}], True->GridBox[{
                   {
                    RowBox[{
                    OpenerBox[Dynamic[System`InfoDump`open$$]], "   ", 
                    StyleBox[
                    RowBox[{"1", "\[InvisibleSpace]", 
                    StyleBox[
                    DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "SystemInformationDialog", "ControlsSmallText"], 
                    StandardForm]],
                    StripOnInput->False,
                    DynamicUpdating->True]}], "IT",
                    StripOnInput->False]}]},
                   {
                    
                    DynamicModuleBox[{System`InfoDump`dynamic$$ = True}, 
                    GridBox[{
                    {
                    PaneSelectorBox[{False->GridBox[{
                    {"\<\"GenericDesktop:198 Button\"\>", "False"}
                    },
                    AutoDelete->False,
                    
                    GridBoxAlignment->{
                    "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    True->
                    DynamicBox[ToBoxes[
                    Grid[
                    Transpose[{{"GenericDesktop:198 Button"}, 
                    ControllerState[1, {"GenericDesktop:198 Button"}]}], 
                    ColumnAlignments -> {Right, Left}, StripOnInput -> True], 
                    StandardForm]]}, Dynamic[System`InfoDump`dynamic$$]]},
                    {
                    TemplateBox[{CheckboxBox[
                    Dynamic[System`InfoDump`dynamic$$], ImageSize -> Small],
                    "\" Show Dynamic Values\""},
                    "RowDefault"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    DynamicModuleValues:>{}]}
                  },
                  BaselinePosition->{Baseline, {1, 1}},
                  DefaultBaseStyle->"Column",
                  GridBoxAlignment->{"Columns" -> {{Left}}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{1.}}, "RowsIndexed" -> {}}]}, Dynamic[
                 System`InfoDump`open$$],
                 BaselinePosition->Baseline,
                 FrameMargins->0,
                 ImageSize->Automatic],
                DynamicModuleValues:>{}]}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {Right, Left}},
             GridBoxDividers->{"Rows" -> {{False}, 
                 GrayLevel[0, 0.2]}},
             GridBoxItemSize->{"Columns" -> {14, 33.92307692307692}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.28], {
                  Offset[0.84]}, 
                 Offset[0.28]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.48]}, 
                 Offset[0.2]}}]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         System`InfoDump`open$$],
         ImageSize->Automatic],
        DynamicModuleValues:>{}]},
      {
       DynamicModuleBox[{System`InfoDump`open$$ = False}, 
        PaneSelectorBox[{False->
         RowBox[{
          OpenerBox[Dynamic[System`InfoDump`open$$]], "   ", 
          StyleBox[
           TemplateBox[{StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "SystemInformationDialog", "ControllerDeviceText"], 
                StandardForm]], DynamicUpdating -> True, StripOnInput -> 
              False],"\" \"","\"2\"","\": \"",
             "\"SideWinder Precision 2 Joystick\""},
            "RowDefault"],
           StripOnInput->False,
           FontWeight->Bold]}], True->GridBox[{
           {
            RowBox[{
             OpenerBox[Dynamic[System`InfoDump`open$$]], "   ", 
             StyleBox[
              TemplateBox[{StyleBox[
                 DynamicBox[
                  ToBoxes[
                   FEPrivate`FrontEndResource[
                   "SystemInformationDialog", "ControllerDeviceText"], 
                   StandardForm]], DynamicUpdating -> True, StripOnInput -> 
                 False],"\" \"","\"2\"","\": \"",
                "\"SideWinder Precision 2 Joystick\""},
               "RowDefault"],
              StripOnInput->False,
              FontWeight->Bold]}]},
           {GridBox[{
              {"\<\"Raw Product Name\"\>", "\<\"\\\"SideWinder Precision 2 \
Joystick\\\"\"\>"},
              {"\<\"Raw Product ID\"\>", "56"},
              {"\<\"Device Type\"\>", "\<\"Windows DirectInput Device\"\>"},
              {"\<\"Raw Controller Type\"\>", "\<\"Joystick\"\>"},
              {"\<\"Wolfram Language Controls\"\>", 
               DynamicModuleBox[{System`InfoDump`open$$ = False}, 
                PaneSelectorBox[{False->
                 RowBox[{
                  OpenerBox[Dynamic[System`InfoDump`open$$]], "   ", 
                  StyleBox[
                   RowBox[{"24", "\[InvisibleSpace]", 
                    StyleBox[
                    DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "SystemInformationDialog", "ControlsSmallText"], 
                    StandardForm]],
                    StripOnInput->False,
                    DynamicUpdating->True]}], "IT",
                   StripOnInput->False]}], True->GridBox[{
                   {
                    RowBox[{
                    OpenerBox[Dynamic[System`InfoDump`open$$]], "   ", 
                    StyleBox[
                    RowBox[{"24", "\[InvisibleSpace]", 
                    StyleBox[
                    DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "SystemInformationDialog", "ControlsSmallText"], 
                    StandardForm]],
                    StripOnInput->False,
                    DynamicUpdating->True]}], "IT",
                    StripOnInput->False]}]},
                   {
                    
                    DynamicModuleBox[{System`InfoDump`dynamic$$ = True}, 
                    GridBox[{
                    {
                    PaneSelectorBox[{False->GridBox[{
                    {"\<\"X\"\>", 
                    RowBox[{"-", "0.000015259021896696368`"}]},
                    {"\<\"Y\"\>", "0.000015259021896696368`"},
                    {"\<\"X1\"\>", 
                    RowBox[{"-", "0.000015259021896696368`"}]},
                    {"\<\"Y1\"\>", "0.000015259021896696368`"},
                    {"\<\"X2\"\>", 
                    RowBox[{"-", "0.000015259021896696368`"}]},
                    {"\<\"Y2\"\>", "0.000015259021896696368`"},
                    {"\<\"X3\"\>", "0.`"},
                    {"\<\"Y3\"\>", "0.`"},
                    {"\<\"X4\"\>", "0"},
                    {"\<\"Y4\"\>", "0"},
                    {"\<\"X5\"\>", "0"},
                    {"\<\"Y5\"\>", "0"},
                    {"\<\"B1\"\>", "False"},
                    {"\<\"B2\"\>", "False"},
                    {"\<\"B3\"\>", "False"},
                    {"\<\"B4\"\>", "False"},
                    {"\<\"B5\"\>", "False"},
                    {"\<\"B6\"\>", "False"},
                    {"\<\"B7\"\>", "False"},
                    {"\<\"B8\"\>", "False"},
                    {"\<\"BLB\"\>", "False"},
                    {"\<\"BRB\"\>", "False"},
                    {"\<\"TLB\"\>", "False"},
                    {"\<\"TRB\"\>", "False"}
                    },
                    AutoDelete->False,
                    
                    GridBoxAlignment->{
                    "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    True->
                    DynamicBox[ToBoxes[
                    Grid[
                    
                    Transpose[{{
                    "X", "Y", "X1", "Y1", "X2", "Y2", "X3", "Y3", "X4", "Y4", 
                    "X5", "Y5", "B1", "B2", "B3", "B4", "B5", "B6", "B7", 
                    "B8", "BLB", "BRB", "TLB", "TRB"}, 
                    ControllerState[
                    2, {"X", "Y", "X1", "Y1", "X2", "Y2", "X3", "Y3", "X4", 
                    "Y4", "X5", "Y5", "B1", "B2", "B3", "B4", "B5", "B6", 
                    "B7", "B8", "BLB", "BRB", "TLB", "TRB"}]}], 
                    ColumnAlignments -> {Right, Left}, StripOnInput -> True], 
                    StandardForm]]}, Dynamic[System`InfoDump`dynamic$$]]},
                    {
                    TemplateBox[{CheckboxBox[
                    Dynamic[System`InfoDump`dynamic$$], ImageSize -> Small],
                    "\" Show Dynamic Values\""},
                    "RowDefault"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    DynamicModuleValues:>{}]}
                  },
                  BaselinePosition->{Baseline, {1, 1}},
                  DefaultBaseStyle->"Column",
                  GridBoxAlignment->{"Columns" -> {{Left}}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{1.}}, "RowsIndexed" -> {}}]}, Dynamic[
                 System`InfoDump`open$$],
                 BaselinePosition->Baseline,
                 FrameMargins->0,
                 ImageSize->Automatic],
                DynamicModuleValues:>{}]},
              {"\<\"Raw Controls\"\>", 
               DynamicModuleBox[{System`InfoDump`open$$ = False}, 
                PaneSelectorBox[{False->
                 RowBox[{
                  OpenerBox[Dynamic[System`InfoDump`open$$]], "   ", 
                  StyleBox[
                   RowBox[{"14", "\[InvisibleSpace]", 
                    StyleBox[
                    DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "SystemInformationDialog", "ControlsSmallText"], 
                    StandardForm]],
                    StripOnInput->False,
                    DynamicUpdating->True]}], "IT",
                   StripOnInput->False]}], True->GridBox[{
                   {
                    RowBox[{
                    OpenerBox[Dynamic[System`InfoDump`open$$]], "   ", 
                    StyleBox[
                    RowBox[{"14", "\[InvisibleSpace]", 
                    StyleBox[
                    DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "SystemInformationDialog", "ControlsSmallText"], 
                    StandardForm]],
                    StripOnInput->False,
                    DynamicUpdating->True]}], "IT",
                    StripOnInput->False]}]},
                   {
                    
                    DynamicModuleBox[{System`InfoDump`dynamic$$ = True}, 
                    GridBox[{
                    {
                    PaneSelectorBox[{False->GridBox[{
                    {"\<\"Y Axis\"\>", 
                    RowBox[{"-", "0.000015259021896696368`"}]},
                    {"\<\"X Axis\"\>", 
                    RowBox[{"-", "0.000015259021896696368`"}]},
                    {"\<\"Slider\"\>", 
                    RowBox[{"-", "1.`"}]},
                    {"\<\"Z Rotation\"\>", 
                    RowBox[{"-", "0.000015259021896696368`"}]},
                    {"\<\"Hatswitch X Axis\"\>", "0.`"},
                    {"\<\"Hatswitch Y Axis\"\>", "0.`"},
                    {"\<\"Button 1\"\>", "False"},
                    {"\<\"Button 2\"\>", "False"},
                    {"\<\"Button 3\"\>", "False"},
                    {"\<\"Button 4\"\>", "False"},
                    {"\<\"Button 5\"\>", "False"},
                    {"\<\"Button 6\"\>", "False"},
                    {"\<\"Button 7\"\>", "False"},
                    {"\<\"Button 8\"\>", "False"}
                    },
                    AutoDelete->False,
                    
                    GridBoxAlignment->{
                    "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    True->
                    DynamicBox[ToBoxes[
                    Grid[
                    
                    Transpose[{{
                    "Y Axis", "X Axis", "Slider", "Z Rotation", 
                    "Hatswitch X Axis", "Hatswitch Y Axis", "Button 1", 
                    "Button 2", "Button 3", "Button 4", "Button 5", 
                    "Button 6", "Button 7", "Button 8"}, 
                    ControllerState[
                    2, {"Y Axis", "X Axis", "Slider", "Z Rotation", 
                    "Hatswitch X Axis", "Hatswitch Y Axis", "Button 1", 
                    "Button 2", "Button 3", "Button 4", "Button 5", 
                    "Button 6", "Button 7", "Button 8"}]}], 
                    ColumnAlignments -> {Right, Left}, StripOnInput -> True], 
                    StandardForm]]}, Dynamic[System`InfoDump`dynamic$$]]},
                    {
                    TemplateBox[{CheckboxBox[
                    Dynamic[System`InfoDump`dynamic$$], ImageSize -> Small],
                    "\" Show Dynamic Values\""},
                    "RowDefault"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    DynamicModuleValues:>{}]}
                  },
                  BaselinePosition->{Baseline, {1, 1}},
                  DefaultBaseStyle->"Column",
                  GridBoxAlignment->{"Columns" -> {{Left}}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{1.}}, "RowsIndexed" -> {}}]}, Dynamic[
                 System`InfoDump`open$$],
                 BaselinePosition->Baseline,
                 FrameMargins->0,
                 ImageSize->Automatic],
                DynamicModuleValues:>{}]}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {Right, Left}},
             GridBoxDividers->{"Rows" -> {{False}, 
                 GrayLevel[0, 0.2]}},
             GridBoxItemSize->{"Columns" -> {14, 33.92307692307692}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.28], {
                  Offset[0.84]}, 
                 Offset[0.28]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.48]}, 
                 Offset[0.2]}}]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         System`InfoDump`open$$],
         ImageSize->Automatic],
        DynamicModuleValues:>{}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
    "DialogStyle",
    Editable->False,
    Deletable->False,
    StripOnInput->False,
    ShowStringCharacters->False,
    TooltipBoxOptions->{TooltipDelay->Automatic}],
   DefaultBaseStyle->"DialogStyle",
   FrameMargins->5],
  ControllerInformationData[{
   "Airplane Mode Switch" -> {{}, {"GenericDesktop:198 Button" -> False}, {
      "Manufacturer ID" -> 16700, "Product Name" -> "Airplane Mode Switch", 
       "Product ID" -> 43982, "Controller Type" -> "External Controller", 
       "Device Type" -> "Windows DirectInput Device", "HID Usage Page" -> 
       "GenericDesktop", "HID Usage" -> "GenericDesktop:12"}, {
      "X2" -> "Z Axis", "Y2" -> -"Z Rotation", "JB" -> "Button 11", "JB1" -> 
       "Button 11", "JB2" -> "Button 12", "JB3" -> None, "TLB" -> "Button 5", 
       "TRB" -> "Button 6", "BLB" -> "Button 7", "BRB" -> "Button 8", "X" -> 
       "X Axis", "Y" -> -"Y Axis", "Z" -> "Z Axis", "X1" -> "X Axis", 
       "Y1" -> -"Y Axis", "Z1" -> "Z Axis", "X2" -> "Z Rotation", 
       "Y2" -> -"Slider", "Z2" -> None, "X3" -> "Hatswitch X Axis", 
       "Y3" -> -"Hatswitch Y Axis", "Z3" -> None, "X4" -> 
       Switch[{"Button 1", "Button 3"}, {False, False}, 0, {
         True, False}, -1, {False, True}, 1, {True, True}, 0.00001], "Y4" -> 
       Switch[{"Button 2", "Button 4"}, {False, False}, 0, {
         True, False}, -1, {False, True}, 1, {True, True}, 0.00001], "X5" -> 
       Switch[{"Button 7", "Button 5"}, {False, False}, 0, {
         True, False}, -1, {False, True}, 1, {True, True}, 0.00001], "Y5" -> 
       Switch[{"Button 8", "Button 6"}, {False, False}, 0, {
         True, False}, -1, {False, True}, 1, {True, True}, 0.00001], "X6" -> 
       Switch[{"Button 9", "Button 10"}, {False, False}, 0, {
         True, False}, -1, {False, True}, 1, {True, True}, 0.00001], "B1" -> 
       "Button 1", "B2" -> "Button 2", "B3" -> "Button 3", "B4" -> "Button 4",
        "B5" -> "Button 5", "B6" -> "Button 6", "B7" -> "Button 7", "B8" -> 
       "Button 8", "B9" -> "Button 9", "B10" -> "Button 10", "B11" -> 
       "Button 11", "B12" -> "Button 12", "DefaultAbsolute" -> False}}, 
    "SideWinder Precision 2 Joystick" -> {{
      "Y Axis" -> -0.000015259021896696368`, 
       "X Axis" -> -0.000015259021896696368`, "Slider" -> -1., 
       "Z Rotation" -> -0.000015259021896696368`, "Hatswitch X Axis" -> 0., 
       "Hatswitch Y Axis" -> 0.}, {
      "Button 1" -> False, "Button 2" -> False, "Button 3" -> False, 
       "Button 4" -> False, "Button 5" -> False, "Button 6" -> False, 
       "Button 7" -> False, "Button 8" -> False}, {
      "Manufacturer ID" -> 1118, "Product Name" -> 
       "SideWinder Precision 2 Joystick", "Product ID" -> 56, 
       "Controller Type" -> "Joystick", "Device Type" -> 
       "Windows DirectInput Device", "HID Usage Page" -> "GenericDesktop", 
       "HID Usage" -> "Joystick"}, {
      "X2" -> "Z Axis", "Y2" -> -"Z Rotation", "JB" -> "Button 11", "JB1" -> 
       "Button 11", "JB2" -> "Button 12", "JB3" -> None, "TLB" -> "Button 5", 
       "TRB" -> "Button 6", "BLB" -> "Button 7", "BRB" -> "Button 8", "X" -> 
       "X Axis", "Y" -> -"Y Axis", "Z" -> "Z Axis", "X1" -> "X Axis", 
       "Y1" -> -"Y Axis", "Z1" -> "Z Axis", "X2" -> "Z Rotation", 
       "Y2" -> -"Slider", "Z2" -> None, "X3" -> "Hatswitch X Axis", 
       "Y3" -> -"Hatswitch Y Axis", "Z3" -> None, "X4" -> 
       Switch[{"Button 1", "Button 3"}, {False, False}, 0, {
         True, False}, -1, {False, True}, 1, {True, True}, 0.00001], "Y4" -> 
       Switch[{"Button 2", "Button 4"}, {False, False}, 0, {
         True, False}, -1, {False, True}, 1, {True, True}, 0.00001], "X5" -> 
       Switch[{"Button 7", "Button 5"}, {False, False}, 0, {
         True, False}, -1, {False, True}, 1, {True, True}, 0.00001], "Y5" -> 
       Switch[{"Button 8", "Button 6"}, {False, False}, 0, {
         True, False}, -1, {False, True}, 1, {True, True}, 0.00001], "X6" -> 
       Switch[{"Button 9", "Button 10"}, {False, False}, 0, {
         True, False}, -1, {False, True}, 1, {True, True}, 0.00001], "B1" -> 
       "Button 1", "B2" -> "Button 2", "B3" -> "Button 3", "B4" -> "Button 4",
        "B5" -> "Button 5", "B6" -> "Button 6", "B7" -> "Button 7", "B8" -> 
       "Button 8", "B9" -> "Button 9", "B10" -> "Button 10", "B11" -> 
       "Button 11", "B12" -> "Button 12", "DefaultAbsolute" -> 
       False}}}]]], "Output",
 CellChangeTimes->{
  3.7191147213612337`*^9, 3.719114757642485*^9, 3.719114904712561*^9, {
   3.7191155104988737`*^9, 3.7191155507142816`*^9}, 3.7191155869839306`*^9, 
   3.7191158067130675`*^9, 3.719116066336097*^9, 3.719116118154725*^9, 
   3.719116460033317*^9, 3.719116501752071*^9, 3.7191168239947786`*^9, 
   3.719116883947151*^9, 3.719117140019697*^9, 3.719117178958078*^9, {
   3.7191173862291317`*^9, 3.719117431230365*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["DeviceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{14., {0., 14.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{RGBColor[0.941, 0.961, 0.957], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {25.5, 
             1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 0.5}, {
             0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {1.395, 
             25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5, 
             24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
           {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
            JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {25.5, 
             1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 0.5}, {
             0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {1.395, 
             25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5, 
             24.605}, {25.5, 23.5}, {25.5, 2.5}}},
             CurveClosed->{1}]}, 
           {FaceForm[{RGBColor[0.5423, 0.63104, 0.63597], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{11.133, 
             18.727999999999998`}, {11.133, 18.451999999999998`}, {
             11.357000000000001`, 18.227999999999998`}, {11.633, 
             18.227999999999998`}, {14.792, 18.227999999999998`}, {15.068, 
             18.227999999999998`}, {15.292, 18.451999999999998`}, {15.292, 
             18.727999999999998`}, {15.292, 20.639000000000003`}, {15.292, 
             20.915}, {15.068, 21.139000000000003`}, {14.792, 
             21.139000000000003`}, {11.633, 21.139000000000003`}, {
             11.357000000000001`, 21.139000000000003`}, {11.133, 20.915}, {
             11.133, 20.639000000000003`}, {11.133, 18.727999999999998`}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
             12.357000000000001`, 1.}, {14.113000000000001`, 1.}, {
             14.113000000000001`, 9.554}, {12.357000000000001`, 9.554}}}]}, 
           {FaceForm[{RGBColor[0.624375, 0.695304, 0.691308], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}}}, {{{15.876000000000001`, 19.799}, {8.122, 19.799}, {
             8.122, 11.516}, {10.573, 11.516}, {10.573, 11.493}, {
             11.982000000000001`, 9.171}, {14.539, 9.171}, {
             15.876000000000001`, 11.493}, {15.876000000000001`, 11.516}, {
             18.326, 11.516}, {18.326, 19.799}, {15.876000000000001`, 
             19.799}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
             8.806000000000001, 7.993}, {9.995000000000001, 7.993}, {
             9.995000000000001, 11.008}, {8.806000000000001, 11.008}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{16.5, 
             7.993}, {17.689, 7.993}, {17.689, 11.008}, {16.5, 11.008}}}]}},
          AspectRatio->Automatic,
          ImageSize->{Automatic, 
            Dynamic[3.5 CurrentValue["FontCapHeight"]]},
          PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Class: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Serial\"\>",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                Style[
                 Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False], 
                Style[
                 Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                Opacity[1], 
                Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`status$$ = {
               "Connected (COM12)", "Not connected (COM12)"}, 
               Devices`DeviceAPI`DeviceDump`d$$ = DeviceObject[{"Serial", 1}],
                Devices`DeviceAPI`DeviceDump`ind$$ = 2, 
               Devices`DeviceAPI`DeviceDump`indr$$ = 1}, 
               DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                 Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                   Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                   Part[
                   Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm],
                ImageSizeCache->{169., {6., 11.}}],
               DynamicModuleValues:>{}],
              "SummaryItem"]}], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{RGBColor[0.941, 0.961, 0.957], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {25.5, 
             1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 0.5}, {
             0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {1.395, 
             25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5, 
             24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
           {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
            JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {25.5, 
             1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 0.5}, {
             0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {1.395, 
             25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5, 
             24.605}, {25.5, 23.5}, {25.5, 2.5}}},
             CurveClosed->{1}]}, 
           {FaceForm[{RGBColor[0.5423, 0.63104, 0.63597], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{11.133, 
             18.727999999999998`}, {11.133, 18.451999999999998`}, {
             11.357000000000001`, 18.227999999999998`}, {11.633, 
             18.227999999999998`}, {14.792, 18.227999999999998`}, {15.068, 
             18.227999999999998`}, {15.292, 18.451999999999998`}, {15.292, 
             18.727999999999998`}, {15.292, 20.639000000000003`}, {15.292, 
             20.915}, {15.068, 21.139000000000003`}, {14.792, 
             21.139000000000003`}, {11.633, 21.139000000000003`}, {
             11.357000000000001`, 21.139000000000003`}, {11.133, 20.915}, {
             11.133, 20.639000000000003`}, {11.133, 18.727999999999998`}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
             12.357000000000001`, 1.}, {14.113000000000001`, 1.}, {
             14.113000000000001`, 9.554}, {12.357000000000001`, 9.554}}}]}, 
           {FaceForm[{RGBColor[0.624375, 0.695304, 0.691308], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}}}, {{{15.876000000000001`, 19.799}, {8.122, 19.799}, {
             8.122, 11.516}, {10.573, 11.516}, {10.573, 11.493}, {
             11.982000000000001`, 9.171}, {14.539, 9.171}, {
             15.876000000000001`, 11.493}, {15.876000000000001`, 11.516}, {
             18.326, 11.516}, {18.326, 19.799}, {15.876000000000001`, 
             19.799}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
             8.806000000000001, 7.993}, {9.995000000000001, 7.993}, {
             9.995000000000001, 11.008}, {8.806000000000001, 11.008}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{16.5, 
             7.993}, {17.689, 7.993}, {17.689, 11.008}, {16.5, 11.008}}}]}},
          AspectRatio->Automatic,
          ImageSize->{Automatic, 
            Dynamic[3.5 CurrentValue["FontCapHeight"]]},
          PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Class: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Serial\"\>",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                Style[
                 Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False], 
                Style[
                 Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                Opacity[1], 
                Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`status$$ = {
               "Connected (COM12)", "Not connected (COM12)"}, 
               Devices`DeviceAPI`DeviceDump`d$$ = DeviceObject[{"Serial", 1}],
                Devices`DeviceAPI`DeviceDump`ind$$, 
               Devices`DeviceAPI`DeviceDump`indr$$}, 
               DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                 Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                   Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                   Part[
                   Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm]],
               DynamicModuleValues:>{}],
              "SummaryItem"]}], "\[SpanFromLeft]"},
           {
            TagBox[
             DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`opacities$$ = {
               Opacity[1], 
               Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`d$$ = 
              DeviceObject[{"Serial", 1}], 
              Devices`DeviceAPI`DeviceDump`props$$, 
              Devices`DeviceAPI`DeviceDump`vals$$, 
              Devices`DeviceAPI`DeviceDump`reg$$}, 
              
              DynamicBox[ToBoxes[
               Devices`DeviceAPI`DeviceDump`reg$$ = 
                 DeviceFramework`DeviceRegisteredQ[
                  Devices`DeviceAPI`DeviceDump`d$$]; 
                Devices`DeviceAPI`DeviceDump`props$$ = 
                 DeviceFramework`DeviceExternalProperties[
                  Devices`DeviceAPI`DeviceDump`d$$]; 
                Devices`DeviceAPI`DeviceDump`vals$$ = 
                 Devices`DeviceAPI`DeviceDump`d$$[
                  Devices`DeviceAPI`DeviceDump`props$$]; Column[
                  Join[{
                    BoxForm`SummaryItem[{"Properties: ", 
                    If[
                    Or[
                    Not[Devices`DeviceAPI`DeviceDump`reg$$], 
                    Devices`DeviceAPI`DeviceDump`props$$ === {}], 
                    Style[None, 
                    Part[Devices`DeviceAPI`DeviceDump`opacities$$, 
                    If[Devices`DeviceAPI`DeviceDump`reg$$, 1, 2]]], ""]}]}, 
                   MapThread[BoxForm`SummaryItem[{
                    StringJoin["      ", 
                    ToString[#], ": "], #2}]& , {
                    Devices`DeviceAPI`DeviceDump`props$$, 
                    Devices`DeviceAPI`DeviceDump`vals$$}]]], StandardForm]],
              DynamicModuleValues:>{}],
             "SummaryItem"], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  DeviceObject[{"Serial", 1}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7191147213612337`*^9, 3.719114757642485*^9, 3.719114904712561*^9, {
   3.7191155104988737`*^9, 3.7191155507142816`*^9}, 3.7191155869839306`*^9, 
   3.7191158067130675`*^9, 3.719116066336097*^9, 3.719116118154725*^9, 
   3.719116460033317*^9, 3.719116501752071*^9, 3.7191168239947786`*^9, 
   3.719116883947151*^9, 3.719117140019697*^9, 3.719117178958078*^9, {
   3.7191173862291317`*^9, 3.719117431261568*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = -0.4402827823649505, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x$$], -1, 1}}, Typeset`size$$ = {63., {2., 12.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`x$3543$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x$$ = -1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`x$$, $CellContext`x$3543$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      DeviceWriteBuffer[$CellContext`serial, 
        ToString[{$CellContext`x$$, 0, 0, 0, 0}]], 
      "Specifications" :> {{$CellContext`x$$, -1, 1}}, 
      "Options" :> {
       ControllerPath -> "Joystick", ControllerLinking -> All, 
        AppearanceElements -> None, ControlType -> None, Paneled -> False, 
        SynchronousUpdating -> True}, "DefaultOptions" :> {}],
     ImageSizeCache->{87., {18., 25.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7191147213612337`*^9, 3.719114757642485*^9, 3.719114904712561*^9, {
   3.7191155104988737`*^9, 3.7191155507142816`*^9}, 3.7191155869839306`*^9, 
   3.7191158067130675`*^9, 3.719116066336097*^9, 3.719116118154725*^9, 
   3.719116460033317*^9, 3.719116501752071*^9, 3.7191168239947786`*^9, 
   3.719116883947151*^9, 3.719117140019697*^9, 3.719117178958078*^9, {
   3.7191173862291317`*^9, 3.7191174312929845`*^9}}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.719111494393024*^9}]
},
WindowSize->{1867, 997},
WindowMargins->{{0, Automatic}, {Automatic, 28}},
Magnification:>1.2 Inherited,
FrontEndVersion->"11.2 for Linux x86 (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 28929, 727, 2658, "Input",ExpressionUUID->"98211a91-54ad-4dcc-8345-41f2debd8887"],
Cell[29512, 751, 596, 14, 71, "Output",ExpressionUUID->"585520ac-53e3-414d-bdf1-e832b2a09100"]
}, Open  ]],
Cell[30123, 768, 188, 4, 38, "Input",ExpressionUUID->"30a83f5b-700c-4318-887f-179850663cfe"],
Cell[30314, 774, 195, 4, 38, "Input",ExpressionUUID->"c5b7b214-f086-4890-bea9-216bb33a9bf7"],
Cell[CellGroupData[{
Cell[30534, 782, 298, 7, 38, "Input",ExpressionUUID->"d3106915-5c42-45de-9019-e6961a9289e4"],
Cell[30835, 791, 298, 5, 659, "Output",ExpressionUUID->"7110e4b2-22b9-40da-a472-727f08fc7a81"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31170, 801, 2614, 63, 435, "Input",ExpressionUUID->"368d37fd-90bf-4609-b281-339a1598fd3e"],
Cell[33787, 866, 25202, 531, 100, "Output",ExpressionUUID->"1264fda3-c15a-4749-8ca7-87d093624c88"],
Cell[58992, 1399, 17390, 344, 105, "Output",ExpressionUUID->"143d7b4f-727f-4841-b927-199c8408a61d"],
Cell[76385, 1745, 2206, 43, 75, "Output",ExpressionUUID->"5a98d9b6-7d28-4d7c-886f-d3a193dc3e93"]
}, Open  ]],
Cell[78606, 1791, 87, 1, 74, "Input",ExpressionUUID->"eae67832-51fd-4ef0-a41d-1e13d17e9d34"]
}
]
*)

